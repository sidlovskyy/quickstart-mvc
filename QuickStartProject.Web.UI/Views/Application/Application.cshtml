@using QuickStartProject.Web.UI.Extensions
@model QuickStartProject.Web.UI.Models.Application.ApplicationViewModel

@{
    ViewBag.Title = "Application";
    ViewBag.MenuItem = "applications";
}

@using (Html.BeginForm())
{
    <legend>@(Model.IsUpdating ? Model.Name + " application" : "Add application")</legend>

    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.Id)

    <div class="control-group">    
        @Html.LabelFor(model => model.Name, new {@class = "control-label"})
        <div class="controls">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name, null, new {@class = "help-inline"})
        </div>
    </div>

    if (Model.IsUpdating)
    {
        <div class="control-group">            
            Application id: <b>@Html.DisplayFor(model => model.Id)</b>
        </div>
    }

    <div class="control-group">    
        @Html.LabelFor(model => model.Description, new {@class = "control-label"})
        <div class="controls">
            @Html.TextAreaFor(model => model.Description, new {rows = 5, @class = "input-xxlarge"})
            @Html.ValidationMessageFor(model => model.Description, null, new {@class = "help-inline"})
        </div>
    </div>

    <div class="control-group">    
        @Html.LabelFor(model => model.LogLevel, new {@class = "control-label"})
        <div class="controls">
            @Html.EnumDropDownListFor(model => model.LogLevel)
            @Html.ValidationMessageFor(model => model.LogLevel, null, new {@class = "help-inline"})
        </div>
    </div>

    <div class="control-group">    
        @Html.LabelFor(model => model.OperatingSystem, new {@class = "control-label"})
        <div class="controls">
            @Html.EnumDropDownListFor(model => model.OperatingSystem)
            @Html.ValidationMessageFor(model => model.OperatingSystem, null, new {@class = "help-inline"})
        </div>
    </div>

    <div class="form-actions">
        <input type="submit" value="Save" class="btn btn-primary btn-large btn-custom" />
        @Html.ActionLink("Back", "Index", "Application", null, new {@class = "btn btn-large btn-secondary"})
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}